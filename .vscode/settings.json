{
    // pytestを有効にする設定。Reactでいうと、Jestとかのテストフレームワークを有効にする感じ。
    "python.testing.pytestEnabled": true,
    // unittest, nosetestは無効にする設定。pytestだけ使う。
    "python.testing.unittestEnabled": false,
    "python.testing.nosetestEnabled": false,
    // pytestの実行時に、`todo`ディレクトリをテスト対象にする設定。
    // Reactでいうと、`jest todo`みたいな感じで、テスト対象のディレクトリを指定する感じ。
    "python.testing.pytestArgs": [
        "todo"
    ],
    // テスト実行時のカレントディレクトリをワークスペースのルートにする設定。
    // Reactでいうと、package.jsonがある場所を基準にするみたいな感じ。
    "python.testing.cwd": "${workspaceFolder}",
    // 環境変数を`.env`ファイルから読み込む設定。
    // Reactでいうと、`.env`ファイルにAPIキーとか環境変数を書いて、それを読み込む感じ。
    "python.envFile": "${workspaceFolder}/.env",
    // Pythonの言語サーバーをPylanceにする設定。
    // Reactでいうと、VSCodeの拡張機能で、コード補完とかエラーチェックとかをやってくれるやつ。
    "python.languageServer": "Pylance",
    // import文の自動補完を有効にする設定。
    // Reactでいうと、`import { useState } from 'react'`とかを自動で補完してくれる感じ。
    "python.analysis.autoImportCompletions": true,
    // 型チェックを基本的なレベルで有効にする設定。
    // Reactでいうと、TypeScriptの型チェックを有効にする感じ。
    "python.analysis.typeCheckingMode": "basic",
    // Pythonのコードを解析する際に、ワークスペースのルートをパスに追加する設定。
    // これで、`todo_project`とかをimportできるようになる。
    // Reactでいうと、`import { Component } from 'components/Component'`みたいな感じで、
    // 相対パスでimportできるようにする感じ。
    "python.analysis.extraPaths": [
        "${workspaceFolder}"
    ],
    // lintを有効にする設定。
    // Reactでいうと、ESLintとかPrettierとかでコードの品質をチェックする感じ。
    "python.linting.enabled": true,
    // mypyを有効にする設定。
    // Reactでいうと、TypeScriptの型チェックを厳密にする感じ。
    "python.linting.mypyEnabled": true,
    // pylintを有効にする設定。
    // Reactでいうと、ESLintみたいな感じで、コードの品質をチェックするツール。
    "python.linting.pylintEnabled": true,
    // pylintの設定で、相対importに関するエラーを無効にする設定。
    // Reactでいうと、ESLintで特定のルールを無効にする感じ。
    "python.linting.pylintArgs": [
        "--disable=relative-beyond-top-level"
    ],
    // flake8を有効にする設定。
    // Reactでいうと、ESLintみたいな感じで、コードの品質をチェックするツール。
    "python.linting.flake8Enabled": true,
    // flake8の設定で、`.flake8`ファイルを読み込む設定。
    // Reactでいうと、ESLintの設定ファイル(`.eslintrc.js`)を読み込む感じ。
    "python.linting.flake8Args": [
        "--config=${workspaceFolder}/.flake8"
    ],
    // ruffは無効にする設定。
    // Reactでいうと、ESLintとかPrettierとかの代わりに使うツールだけど、今回は使わない。
    "python.linting.ruffEnabled": false
}
