"""
Django settings for todo_project project.

Generated by 'django-admin startproject' using Django 5.1.4.

このファイルはDjangoプロジェクトの設定を記述する場所だよ！
Reactでいうと、プロジェクト全体の環境設定ファイルみたいなもの。
例えば、APIのエンドポイントとか、データベースの設定とか、
セキュリティに関する設定とか、色々な設定をここでやるんだ。

詳しくは公式ドキュメントを見てね！
https://docs.djangoproject.com/en/5.1/topics/settings/
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# BASE_DIRはプロジェクトのルートディレクトリのパスだよ。
# Reactでいうと、package.jsonがある場所みたいな感じ。
BASE_DIR = Path(__file__).resolve().parent.parent


# 開発環境用の設定だよ。本番環境では変更する必要があるよ！
# Reactでいうと、開発環境と本番環境でAPIのエンドポイントを変えるみたいな感じ。

# SECRET_KEYは、Djangoがセキュアな処理をするために使う秘密鍵だよ。
# 絶対に漏洩させちゃダメ！
# Reactでいうと、APIキーみたいなものだけど、もっと重要なもの。
SECRET_KEY = 'django-insecure-k(mvp$8#$ik4gu6&*i4m%wy84z$(08!ey^@@r30_2e7^5qa4tr'

# DEBUGは、開発モードかどうかを設定するフラグだよ。
# Trueだと、エラーメッセージが詳しく表示されるけど、本番環境ではFalseにする必要があるよ。
# Reactでいうと、開発モードでconsole.logをたくさん出すみたいな感じ。
DEBUG = True

# ALLOWED_HOSTSは、このDjangoアプリがリクエストを受け付けるホスト名のリストだよ。
# 本番環境では、自分のドメインを設定する必要があるよ。
# Reactでいうと、CORSの設定みたいなもの。
ALLOWED_HOSTS = []


# アプリケーションの設定だよ。
# Reactでいうと、package.jsonのdependenciesみたいな感じ。
INSTALLED_APPS = [
    'django.contrib.admin', # Djangoの管理サイト
    'django.contrib.auth', # 認証機能
    'django.contrib.contenttypes', # コンテンツタイプ
    'django.contrib.sessions', # セッション機能
    'django.contrib.messages', # メッセージ機能
    'django.contrib.staticfiles', # 静的ファイル機能
    'rest_framework', # Django REST Framework
    'todo', # todoアプリ
]

# ミドルウェアの設定だよ。
# リクエストとレスポンスを処理する際に、色々な処理を挟むためのもの。
# Reactでいうと、Reduxのmiddlewareみたいな感じ。
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', # セキュリティ関連のミドルウェア
    'django.contrib.sessions.middleware.SessionMiddleware', # セッション管理
    'django.middleware.common.CommonMiddleware', # 共通処理
    'django.middleware.csrf.CsrfViewMiddleware', # CSRF対策
    'django.contrib.auth.middleware.AuthenticationMiddleware', # 認証処理
    'django.contrib.messages.middleware.MessageMiddleware', # メッセージ処理
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # クリックジャッキング対策
]

# ルートURLの設定だよ。
# Reactでいうと、ルーティングの設定ファイルみたいなもの。
ROOT_URLCONF = 'todo_project.urls'

# テンプレートの設定だよ。
# HTMLファイルをレンダリングするための設定。
# Reactでいうと、JSXをレンダリングする設定みたいなもの。
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGIの設定だよ。
# DjangoアプリをWebサーバーで動かすための設定。
# Reactでいうと、npm run buildした後のファイルをサーバーで動かす設定みたいなもの。
WSGI_APPLICATION = 'todo_project.wsgi.application'


# データベースの設定だよ。
# どのデータベースを使うか、データベースの名前などを設定する。
# Reactでいうと、APIのエンドポイントを設定するみたいなもの。
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # SQLiteを使う
        'NAME': BASE_DIR / 'db.sqlite3', # データベースのファイルパス
    }
}


# パスワードのバリデーション設定だよ。
# パスワードの強度をチェックするための設定。
# Reactでいうと、フォームのバリデーション設定みたいなもの。
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 国際化の設定だよ。
# 言語やタイムゾーンを設定する。
# Reactでいうと、i18nの設定みたいなもの。
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# 静的ファイルの設定だよ。
# CSSやJavaScriptなどの静的ファイルを配信するための設定。
# Reactでいうと、publicディレクトリみたいなもの。
STATIC_URL = 'static/'

# デフォルトのプライマリーキーの型を設定する。
# 特に理由がなければ、このままでOK。
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
